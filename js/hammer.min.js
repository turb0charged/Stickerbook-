




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>hammer.js/hammer.min.js at master · EightMedia/hammer.js · GitHub</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="EightMedia/hammer.js" name="twitter:title" /><meta content="hammer.js - A javascript library for multi-touch gestures :// You can touch this" name="twitter:description" /><meta content="https://avatars.githubusercontent.com/u/728736" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars.githubusercontent.com/u/728736" property="og:image" /><meta content="EightMedia/hammer.js" property="og:title" /><meta content="https://github.com/EightMedia/hammer.js" property="og:url" /><meta content="hammer.js - A javascript library for multi-touch gestures :// You can touch this" property="og:description" />

    <meta name="hostname" content="github-fe129-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87c9373a41) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="80EBD315:6EAD:869A45:530EA003" name="octolytics-dimension-request_id" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="5mqwzYYL8cmAyLrSey3BNshaENki2Q/Wil+Rg00oW0o=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-99f0c420247f036251131234f2df1eaaf2ddb386.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-ec653e1d641c436ec4d6b01cc500917e35f6fa2d.css" media="all" rel="stylesheet" type="text/css" />
    
    


      <script crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/frameworks-01ab94ef47d6293597922a1fab60e274e1d8f37e.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://github.global.ssl.fastly.net/assets/github-503e94cbf26ee02e8f8908f6cfda39f6b1947500.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="24062edff74e74a6d1daa0f9c82f64a1">

        <link data-pjax-transient rel='permalink' href='/EightMedia/hammer.js/blob/d0bac7f9daa6793219a7d823dfee8d9e98b7ed75/hammer.min.js'>

  <meta name="description" content="hammer.js - A javascript library for multi-touch gestures :// You can touch this" />

  <meta content="728736" name="octolytics-dimension-user_id" /><meta content="EightMedia" name="octolytics-dimension-user_login" /><meta content="3602123" name="octolytics-dimension-repository_id" /><meta content="EightMedia/hammer.js" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="3602123" name="octolytics-dimension-repository_network_root_id" /><meta content="EightMedia/hammer.js" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/EightMedia/hammer.js/commits/master.atom" rel="alternate" title="Recent Commits to hammer.js:master" type="application/atom+xml" />

  </head>


  <body class="logged_out  env-production  vis-public page-blob tipsy-tooltips">
    <div class="wrapper">
      
      
      
      


      
      <div class="header header-logged-out">
  <div class="container clearfix">

    <a class="header-logo-wordmark" href="https://github.com/">
      <span class="mega-octicon octicon-logo-github"></span>
    </a>

    <div class="header-actions">
        <a class="button primary" href="/join">Sign up</a>
      <a class="button signin" href="/login?return_to=%2FEightMedia%2Fhammer.js%2Fblob%2Fmaster%2Fhammer.min.js">Sign in</a>
    </div>

    <div class="command-bar js-command-bar  in-repository">

      <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
        <li class="features"><a href="/features">Features</a></li>
          <li class="enterprise"><a href="https://enterprise.github.com/">Enterprise</a></li>
          <li class="blog"><a href="/blog">Blog</a></li>
      </ul>
        <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    
      data-repo="EightMedia/hammer.js"
      data-branch="master"
      data-sha="ca16f1d66c9db1bd720e41044e00a8ef6412ef4f"
  >

    <input type="hidden" name="nwo" value="EightMedia/hammer.js" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target" role="button" aria-haspopup="true">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container" aria-hidden="true">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="help tooltipped tooltipped-s" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
    </div>

  </div>
</div>




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">


  <li>
    <a href="/login?return_to=%2FEightMedia%2Fhammer.js"
    class="minibutton with-count js-toggler-target star-button tooltipped tooltipped-n"
    aria-label="You must be signed in to use this feature" rel="nofollow">
    <span class="octicon octicon-star"></span>Star
  </a>

    <a class="social-count js-social-count" href="/EightMedia/hammer.js/stargazers">
      6,991
    </a>

  </li>

    <li>
      <a href="/login?return_to=%2FEightMedia%2Fhammer.js"
        class="minibutton with-count js-toggler-target fork-button tooltipped tooltipped-n"
        aria-label="You must be signed in to fork a repository" rel="nofollow">
        <span class="octicon octicon-git-branch"></span>Fork
      </a>
      <a href="/EightMedia/hammer.js/network" class="social-count">
        1,117
      </a>
    </li>
</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo"></span>
          <span class="author">
            <a href="/EightMedia" class="url fn" itemprop="url" rel="author"><span itemprop="title">EightMedia</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/EightMedia/hammer.js" class="js-current-repository js-repo-home-link">hammer.js</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/EightMedia/hammer.js" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /EightMedia/hammer.js">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/EightMedia/hammer.js/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /EightMedia/hammer.js/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>88</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/EightMedia/hammer.js/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /EightMedia/hammer.js/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>3</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


        <li class="tooltipped tooltipped-w" aria-label="Wiki">
          <a href="/EightMedia/hammer.js/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_wiki /EightMedia/hammer.js/wiki">
            <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>
    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/EightMedia/hammer.js/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /EightMedia/hammer.js/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/EightMedia/hammer.js/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /EightMedia/hammer.js/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Network">
        <a href="/EightMedia/hammer.js/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /EightMedia/hammer.js/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/EightMedia/hammer.js.git" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/EightMedia/hammer.js.git" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/EightMedia/hammer.js" readonly="readonly">

    <span aria-label="copy to clipboard" class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/EightMedia/hammer.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>



                <a href="/EightMedia/hammer.js/archive/master.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:9e555941f2c10580bc1aa1fdfa3b9727 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/EightMedia/hammer.js/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/blob/archive/hammer.min.js"
                 data-name="archive"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="archive">archive</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/blob/gh-pages/hammer.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/blob/master/hammer.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/v1.0.5/hammer.min.js"
                 data-name="v1.0.5"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.5">v1.0.5</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/v1.0.4/hammer.min.js"
                 data-name="v1.0.4"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.4">v1.0.4</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/v1.0.3/hammer.min.js"
                 data-name="v1.0.3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.3">v1.0.3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/v1.0.2/hammer.min.js"
                 data-name="v1.0.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.2">v1.0.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/v1.0.1/hammer.min.js"
                 data-name="v1.0.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.1">v1.0.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/v1.0.0/hammer.min.js"
                 data-name="v1.0.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="v1.0.0">v1.0.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/EightMedia/hammer.js/tree/1.0.6/hammer.min.js"
                 data-name="1.0.6"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="1.0.6">1.0.6</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/EightMedia/hammer.js" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">hammer.js</span></a></span></span><span class="separator"> / </span><strong class="final-path">hammer.min.js</strong> <span aria-label="copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="hammer.min.js" data-copied-hint="copied!"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit file-history-tease">
    <img alt="Jorik Tangelder" class="main-avatar js-avatar" data-user="1243901" height="24" src="https://0.gravatar.com/avatar/dd965ce7f185044f157d255cf3e65662?d=https%3A%2F%2Fidenticons.github.com%2F3c644d55d017e194cb5d1495b65dcbba.png&amp;r=x&amp;s=140" width="24" />
    <span class="author"><a href="/jtangelder" rel="author">jtangelder</a></span>
    <time class="js-relative-date" data-title-format="YYYY-MM-DD HH:mm:ss" datetime="2014-02-18T00:06:36-08:00" title="2014-02-18 00:06:36">February 18, 2014</time>
    <div class="commit-title">
        <a href="/EightMedia/hammer.js/commit/d0bac7f9daa6793219a7d823dfee8d9e98b7ed75" class="message" data-pjax="true" title="build">build</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>2</strong> contributors</a></p>
          <a class="avatar tooltipped tooltipped-s" aria-label="jtangelder" href="/EightMedia/hammer.js/commits/master/hammer.min.js?author=jtangelder"><img alt="Jorik Tangelder" class=" js-avatar" data-user="1243901" height="20" src="https://0.gravatar.com/avatar/dd965ce7f185044f157d255cf3e65662?d=https%3A%2F%2Fidenticons.github.com%2F3c644d55d017e194cb5d1495b65dcbba.png&amp;r=x&amp;s=140" width="20" /></a>
    <a class="avatar tooltipped tooltipped-s" aria-label="sithmel" href="/EightMedia/hammer.js/commits/master/hammer.min.js?author=sithmel"><img alt="Maurizio Lupo" class=" js-avatar" data-user="460811" height="20" src="https://0.gravatar.com/avatar/421bf836fa8e516a26276df82e65caf7?d=https%3A%2F%2Fidenticons.github.com%2Fd1a9ee32dfca83ee977e86d7b4908da1.png&amp;r=x&amp;s=140" width="20" /></a>


    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Jorik Tangelder" class=" js-avatar" data-user="1243901" height="24" src="https://0.gravatar.com/avatar/dd965ce7f185044f157d255cf3e65662?d=https%3A%2F%2Fidenticons.github.com%2F3c644d55d017e194cb5d1495b65dcbba.png&amp;r=x&amp;s=140" width="24" />
            <a href="/jtangelder">jtangelder</a>
          </li>
          <li class="facebox-user-list-item">
            <img alt="Maurizio Lupo" class=" js-avatar" data-user="460811" height="24" src="https://0.gravatar.com/avatar/421bf836fa8e516a26276df82e65caf7?d=https%3A%2F%2Fidenticons.github.com%2Fd1a9ee32dfca83ee977e86d7b4908da1.png&amp;r=x&amp;s=140" width="24" />
            <a href="/sithmel">sithmel</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>9 lines (7 sloc)</span>
          <span class="meta-divider"></span>
        <span>14.873 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
              <a class="minibutton disabled tooltipped tooltipped-w" href="#"
                 aria-label="You must be signed in to make or propose changes">Edit</a>
          <a href="/EightMedia/hammer.js/raw/master/hammer.min.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/EightMedia/hammer.js/blame/master/hammer.min.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/EightMedia/hammer.js/commits/master/hammer.min.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger disabled empty-icon tooltipped tooltipped-w" href="#"
             aria-label="You must be signed in to make or propose changes">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/*! Hammer.JS - v1.0.7dev - 2014-02-18</span></div><div class='line' id='LC2'><span class="cm"> * http://eightmedia.github.com/hammer.js</span></div><div class='line' id='LC3'><span class="cm"> *</span></div><div class='line' id='LC4'><span class="cm"> * Copyright (c) 2014 Jorik Tangelder &lt;j.tangelder@gmail.com&gt;;</span></div><div class='line' id='LC5'><span class="cm"> * Licensed under the MIT license */</span></div><div class='line' id='LC6'><br/></div><div class='line' id='LC7'><br/></div><div class='line' id='LC8'><span class="o">!</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="s2">&quot;use strict&quot;</span><span class="p">;</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">READY</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">determineEventTypes</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onTouch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">DOCUMENT</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">detect</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onTouch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">DOCUMENT</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">detect</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">READY</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">new</span> <span class="nx">d</span><span class="p">.</span><span class="nx">Instance</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="p">{})};</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaults</span><span class="o">=</span><span class="p">{</span><span class="nx">stop_browser_behavior</span><span class="o">:</span><span class="p">{</span><span class="nx">userSelect</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">touchAction</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">touchCallout</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">contentZooming</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">userDrag</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">tapHighlightColor</span><span class="o">:</span><span class="s2">&quot;rgba(0,0,0,0)&quot;</span><span class="p">}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">HAS_POINTEREVENTS</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">pointerEnabled</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">msPointerEnabled</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">HAS_TOUCHEVENTS</span><span class="o">=</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">MOBILE_REGEX</span><span class="o">=</span><span class="sr">/mobile|tablet|ip(ad|hone|od)|android|silk/i</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">NO_MOUSEEVENTS</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">HAS_TOUCHEVENTS</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">MOBILE_REGEX</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_TYPES</span><span class="o">=</span><span class="p">{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_DOWN</span><span class="o">=</span><span class="s2">&quot;down&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_LEFT</span><span class="o">=</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_UP</span><span class="o">=</span><span class="s2">&quot;up&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_RIGHT</span><span class="o">=</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_MOUSE</span><span class="o">=</span><span class="s2">&quot;mouse&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_TOUCH</span><span class="o">=</span><span class="s2">&quot;touch&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_PEN</span><span class="o">=</span><span class="s2">&quot;pen&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">UPDATE_VELOCITY_INTERVAL</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="o">=</span><span class="s2">&quot;start&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="o">=</span><span class="s2">&quot;move&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">=</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">DOCUMENT</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugins</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plugins</span><span class="o">||</span><span class="p">{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="o">||</span><span class="p">{},</span><span class="nx">d</span><span class="p">.</span><span class="nx">READY</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="o">=</span><span class="p">{</span><span class="nx">extend</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">each</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="s2">&quot;forEach&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span><span class="p">}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span><span class="p">},</span><span class="nx">hasParent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">==</span><span class="nx">b</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">},</span><span class="nx">getCenter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientX</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;undefined&quot;</span><span class="o">!=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">clientY</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">)}),{</span><span class="nx">pageX</span><span class="o">:</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">pageY</span><span class="o">:</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">Math</span><span class="p">,</span><span class="nx">c</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">}},</span><span class="nx">getVelocity</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">}},</span><span class="nx">getAngle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">;</span><span class="k">return</span> <span class="mi">180</span><span class="o">*</span><span class="nb">Math</span><span class="p">.</span><span class="nx">atan2</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="nb">Math</span><span class="p">.</span><span class="nx">PI</span><span class="p">},</span><span class="nx">getDirection</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageX</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageY</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="o">&gt;=</span><span class="nx">e</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageX</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_LEFT</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_RIGHT</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageY</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_UP</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_DOWN</span><span class="p">},</span><span class="nx">getDistance</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">;</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getDistance</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">getDistance</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">getRotation</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="mi">2</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">getAngle</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">getAngle</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">isVertical</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_UP</span><span class="o">||</span><span class="nx">a</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_DOWN</span><span class="p">},</span><span class="nx">stopDefaultBrowserBehavior</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;webkit&quot;</span><span class="p">,</span><span class="s2">&quot;khtml&quot;</span><span class="p">,</span><span class="s2">&quot;moz&quot;</span><span class="p">,</span><span class="s2">&quot;Moz&quot;</span><span class="p">,</span><span class="s2">&quot;ms&quot;</span><span class="p">,</span><span class="s2">&quot;o&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">)})}),</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">userSelect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">onselectstart</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}),</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">userDrag</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ondragstart</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}))},</span><span class="nx">startDefaultBrowserBehavior</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;webkit&quot;</span><span class="p">,</span><span class="s2">&quot;khtml&quot;</span><span class="p">,</span><span class="s2">&quot;moz&quot;</span><span class="p">,</span><span class="s2">&quot;Moz&quot;</span><span class="p">,</span><span class="s2">&quot;ms&quot;</span><span class="p">,</span><span class="s2">&quot;o&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">)),</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">)})}),</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">userSelect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">onselectstart</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="s2">&quot;none&quot;</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">userDrag</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">ondragstart</span><span class="o">=</span><span class="kc">null</span><span class="p">))}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">Instance</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaults</span><span class="p">),</span><span class="nx">b</span><span class="o">||</span><span class="p">{}),</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stop_browser_behavior</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">stopDefaultBrowserBehavior</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stop_browser_behavior</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventStartHandler</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">onTouch</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">startDetect</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">Instance</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">gesture</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">off</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="o">-</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">gesture</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">handler</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">trigger</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{});</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">DOCUMENT</span><span class="p">.</span><span class="nx">createEvent</span><span class="p">(</span><span class="s2">&quot;Event&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">initEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">gesture</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">hasParent</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">dispatchEvent</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">},</span><span class="nx">enable</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">enabled</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">},</span><span class="nx">dispose</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stop_browser_behavior</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">startDefaultBrowserBehavior</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stop_browser_behavior</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">gesture</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">handler</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventHandler</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="p">.</span><span class="nx">unbindDom</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_TYPES</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">_eventStartHandler</span><span class="p">),</span><span class="k">this</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">event</span><span class="o">=</span><span class="p">{</span><span class="nx">bindDom</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">unbindDom</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">onTouch</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/mouse/</span><span class="p">)</span><span class="o">||!</span><span class="nx">g</span><span class="p">){</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/touch/</span><span class="p">)</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/pointerdown/</span><span class="p">)</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/mouse/</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="mi">1</span><span class="o">===</span><span class="nx">i</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/mouse/</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/touch|pointer/</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">HAS_POINTEREVENTS</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="p">.</span><span class="nx">updatePointer</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/touch/</span><span class="p">)</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/up/</span><span class="p">)</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">),</span><span class="nx">k</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="o">:</span><span class="nx">k</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="p">),(</span><span class="nx">k</span><span class="o">||</span><span class="kc">null</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">collectEventData</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">getTouchList</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">i</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">HAS_POINTEREVENTS</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="p">.</span><span class="nx">updatePointer</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">i</span><span class="p">))),</span><span class="nx">k</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="p">.</span><span class="nx">reset</span><span class="p">())}};</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">bindDom</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_TYPES</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">i</span><span class="p">),</span><span class="nx">i</span><span class="p">},</span><span class="nx">determineEventTypes</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">HAS_POINTEREVENTS</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="p">.</span><span class="nx">getEvents</span><span class="p">()</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">NO_MOUSEEVENTS</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="s2">&quot;touchmove&quot;</span><span class="p">,</span><span class="s2">&quot;touchend touchcancel&quot;</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;touchstart mousedown&quot;</span><span class="p">,</span><span class="s2">&quot;touchmove mousemove&quot;</span><span class="p">,</span><span class="s2">&quot;touchend touchcancel mouseup&quot;</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_TYPES</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_TYPES</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_TYPES</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]},</span><span class="nx">getTouchList</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">HAS_POINTEREVENTS</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="p">.</span><span class="nx">getTouchList</span><span class="p">()</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">identifier</span><span class="o">=</span><span class="mi">1</span><span class="p">,[</span><span class="nx">a</span><span class="p">])},</span><span class="nx">collectEventData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_TOUCH</span><span class="p">;</span><span class="k">return</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/mouse/</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="p">.</span><span class="nx">matchType</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_MOUSE</span><span class="p">,</span><span class="nx">e</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_MOUSE</span><span class="p">),{</span><span class="nx">center</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getCenter</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">timeStamp</span><span class="o">:</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">).</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">target</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="nx">touches</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">eventType</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">pointerType</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">srcEvent</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">preventDefault</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">srcEvent</span><span class="p">.</span><span class="nx">preventManipulation</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">srcEvent</span><span class="p">.</span><span class="nx">preventManipulation</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">srcEvent</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">srcEvent</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()},</span><span class="nx">stopPropagation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">srcEvent</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">()},</span><span class="nx">stopDetect</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">stopDetect</span><span class="p">()}}}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">PointerEvent</span><span class="o">=</span><span class="p">{</span><span class="nx">pointers</span><span class="o">:</span><span class="p">{},</span><span class="nx">getTouchList</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointers</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">b</span><span class="p">},</span><span class="nx">updatePointer</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">?</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">pointers</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointerId</span><span class="p">]</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">identifier</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointerId</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointers</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointerId</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nb">Object</span><span class="p">.</span><span class="nx">keys</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pointers</span><span class="p">).</span><span class="nx">length</span><span class="p">},</span><span class="nx">matchType</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointerType</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointerType</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_MOUSE</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">MSPOINTER_TYPE_MOUSE</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_MOUSE</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_TOUCH</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">MSPOINTER_TYPE_TOUCH</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_TOUCH</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_PEN</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">MSPOINTER_TYPE_PEN</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_PEN</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="nx">getEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;pointerdown MSPointerDown&quot;</span><span class="p">,</span><span class="s2">&quot;pointermove MSPointerMove&quot;</span><span class="p">,</span><span class="s2">&quot;pointerup pointercancel MSPointerUp MSPointerCancel&quot;</span><span class="p">]},</span><span class="nx">reset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">pointers</span><span class="o">=</span><span class="p">{}}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="o">=</span><span class="p">{</span><span class="nx">gestures</span><span class="o">:</span><span class="p">[],</span><span class="nx">current</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">previous</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">stopped</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">startDetect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stopped</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="p">{</span><span class="nx">inst</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">startEvent</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">),</span><span class="nx">lastEvent</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">lastVEvent</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">velocity</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">detect</span><span class="p">(</span><span class="nx">b</span><span class="p">))},</span><span class="nx">detect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">stopped</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">extendEventData</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">inst</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gestures</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">stopped</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">handler</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">inst</span><span class="p">)</span><span class="o">!==!</span><span class="mi">1</span><span class="o">?</span><span class="k">void</span> <span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">stopDetect</span><span class="p">(),</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">stopDetect</span><span class="p">(),</span><span class="nx">a</span><span class="p">}},</span><span class="nx">stopDetect</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">previous</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stopped</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">extendEventData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">startEvent</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastVEvent</span><span class="p">;</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">))}));</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">timeStamp</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageY</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">velocity</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">&gt;</span><span class="nx">d</span><span class="p">.</span><span class="nx">UPDATE_VELOCITY_INTERVAL</span><span class="o">?</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getVelocity</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">timeStamp</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageY</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastVEvent</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">x</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">y</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">velocity</span><span class="o">=</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">velocity</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getVelocity</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">velocity</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastVEvent</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="s2">&quot;end&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">interimAngle</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">interimDirection</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getAngle</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getDirection</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">deltaTime</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">deltaX</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">deltaY</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">velocityX</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">velocityY</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">distance</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getDistance</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">),</span><span class="nx">angle</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getAngle</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">),</span><span class="nx">interimAngle</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">direction</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getDirection</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">),</span><span class="nx">interimDirection</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">scale</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getScale</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">),</span><span class="nx">rotation</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">getRotation</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">touches</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">),</span><span class="nx">startEvent</span><span class="o">:</span><span class="nx">b</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">register</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">defaults</span><span class="o">||</span><span class="p">{};</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">===</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">]</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">defaults</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">||</span><span class="mi">1</span><span class="nx">e3</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">index</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">gestures</span><span class="p">}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Drag</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;drag&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="mi">50</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">drag_min_distance</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">correct_for_drag_min_distance</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">drag_max_touches</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">drag_block_horizontal</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">drag_block_vertical</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">drag_lock_to_axis</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">drag_lock_min_distance</span><span class="o">:</span><span class="mi">25</span><span class="p">},</span><span class="nx">triggered</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_max_touches</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_max_touches</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="p">){</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="o">:</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_min_distance</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">correct_for_drag_min_distance</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_min_distance</span><span class="o">/</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">startEvent</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageX</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">deltaX</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">startEvent</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">pageY</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">deltaY</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">extendEventData</span><span class="p">(</span><span class="nx">a</span><span class="p">)}(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">drag_locked_to_axis</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_lock_to_axis</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_lock_min_distance</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">drag_locked_to_axis</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">direction</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">drag_locked_to_axis</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">direction</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">direction</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">isVertical</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">deltaY</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_UP</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_DOWN</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">deltaX</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_LEFT</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">DIRECTION_RIGHT</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;start&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">direction</span><span class="p">,</span><span class="nx">a</span><span class="p">),(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_block_vertical</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">isVertical</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">direction</span><span class="p">)</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">drag_block_horizontal</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">utils</span><span class="p">.</span><span class="nx">isVertical</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">direction</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">1</span><span class="p">}}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Hold</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;hold&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">hold_timeout</span><span class="o">:</span><span class="mi">500</span><span class="p">,</span><span class="nx">hold_threshold</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">timer</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="p">){</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="o">:</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="s2">&quot;hold&quot;</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;hold&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hold_timeout</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">hold_threshold</span><span class="o">&amp;&amp;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">:</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">timer</span><span class="p">)}}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Release</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;release&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Swipe</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;swipe&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="mi">40</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">swipe_min_touches</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">swipe_max_touches</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">swipe_velocity</span><span class="o">:</span><span class="p">.</span><span class="mi">7</span><span class="p">},</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">swipe_max_touches</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">swipe_min_touches</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">swipe_max_touches</span><span class="p">)</span><span class="k">return</span><span class="p">;(</span><span class="nx">a</span><span class="p">.</span><span class="nx">velocityX</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">swipe_velocity</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">velocityY</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">swipe_velocity</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">direction</span><span class="p">,</span><span class="nx">a</span><span class="p">))}}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Tap</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;tap&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">tap_max_touchtime</span><span class="o">:</span><span class="mi">250</span><span class="p">,</span><span class="nx">tap_max_distance</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">tap_always</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">doubletap_distance</span><span class="o">:</span><span class="mi">20</span><span class="p">,</span><span class="nx">doubletap_interval</span><span class="o">:</span><span class="mi">300</span><span class="p">},</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">!=</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">reachedTapMaxDistance</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">&amp;&amp;</span><span class="s2">&quot;touchcancel&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcEvent</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">previous</span><span class="p">,</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">reachedTapMaxDistance</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">deltaTime</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tap_max_touchtime</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="s2">&quot;tap&quot;</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastEvent</span><span class="p">.</span><span class="nx">timeStamp</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">doubletap_interval</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">doubletap_distance</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;doubletap&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">),(</span><span class="o">!</span><span class="nx">e</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tap_always</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="s2">&quot;tap&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">))}}</span><span class="k">else</span> <span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">reachedTapMaxDistance</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">distance</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tap_max_distance</span><span class="p">}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Touch</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;touch&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:-</span><span class="mi">1</span><span class="o">/</span><span class="mi">0</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">prevent_default</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">prevent_mouseevents</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">prevent_mouseevents</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointerType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">POINTER_MOUSE</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopDetect</span><span class="p">(),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">prevent_default</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="o">==</span><span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">void</span> <span class="mi">0</span><span class="p">)}},</span><span class="nx">d</span><span class="p">.</span><span class="nx">gestures</span><span class="p">.</span><span class="nx">Transform</span><span class="o">=</span><span class="p">{</span><span class="nx">name</span><span class="o">:</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="nx">index</span><span class="o">:</span><span class="mi">45</span><span class="p">,</span><span class="nx">defaults</span><span class="o">:</span><span class="p">{</span><span class="nx">transform_min_scale</span><span class="o">:</span><span class="p">.</span><span class="mi">01</span><span class="p">,</span><span class="nx">transform_min_rotation</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">transform_always_block</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">triggered</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">handler</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">!=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="mi">2</span><span class="p">))</span><span class="k">switch</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transform_always_block</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">eventType</span><span class="p">){</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_START</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_MOVE</span><span class="o">:</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">abs</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">rotation</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transform_min_scale</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transform_min_rotation</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">detection</span><span class="p">.</span><span class="nx">current</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;start&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transform_min_rotation</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;rotate&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">transform_min_scale</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;pinch&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="s2">&quot;pinch&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">scale</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="s2">&quot;in&quot;</span><span class="o">:</span><span class="s2">&quot;out&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">));</span><span class="k">break</span><span class="p">;</span><span class="k">case</span> <span class="nx">d</span><span class="p">.</span><span class="nx">EVENT_END</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">trigger</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">+</span><span class="s2">&quot;end&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">triggered</span><span class="o">=!</span><span class="mi">1</span><span class="p">}}},</span><span class="s2">&quot;function&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">define</span><span class="o">&amp;&amp;</span><span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="o">?</span><span class="nx">define</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">})</span><span class="o">:</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">module</span><span class="o">&amp;&amp;</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">?</span><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">Hammer</span><span class="o">=</span><span class="nx">d</span><span class="p">}(</span><span class="nb">window</span><span class="p">);</span></div><div class='line' id='LC9'><span class="c1">//# sourceMappingURL=hammer.min.map</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.07151s from github-fe129-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

